<!--Simple Ontology Visualization, Center for DH at AKS-->
<html>
<head>
	<title>Simple Ontology Visualization</title>
	<meta charset='UTF-8'/>
	<meta property='og:title' content='Simple Ontology Visualization'/>
	<meta property='og:image' content='http://dh.aks.ac.kr/Graph/vis/img/makeGraph.jpg'/>
	<meta name='description' content='vis.js Network API Script'/>
	<meta name='author' content='Center for Digital Humanities at AKS'/>
	<script type='text/javascript' src='http://dh.aks.ac.kr/Graph/vis/dist/vis.js'></script>
	<link href='http://dh.aks.ac.kr/Graph/vis/dist/vis.css' rel='stylesheet' type='text/css' />
	<link href='http://dh.aks.ac.kr/Graph/vis/dist/vis-network.min.css' rel='stylesheet' type='text/css'/>
	<style type='text/css'>
		#mynetwork {
			border: 1px solid lightgray;
			width:100%;
			height: 90%;
		}
	</style>

	<script type='text/javascript'>
	
	var nodesArray = [], edgesArray = [];
	var network = null;

	function destroy() {
		if (network !== null) {
			network.destroy();
			network = null;
			nodesArray = [];
			edgesArray = [];		
		} 
	}	

	function draw() {

		destroy();

		nodesArray.push({
			id: '윤종훈',
			label: '윤종훈',
			title: '윤종훈',
			shape: 'image',
			image: 'icon/인물.png',
			url: ''
		});

		nodesArray.push({
			id: '김철수',
			label: '김철수',
			title: '김철수',
			shape: 'image',
			image: 'icon/인물.png',
			url: ''
		});

		nodesArray.push({
			id: '스컬',
			label: '스컬(조성진)',
			title: '스컬(조성진)',
			shape: 'image',
			image: 'icon/인물.png',
			url: ''
		});

		nodesArray.push({
			id: 'Da_C_Side',
			label: 'Da C Side',
			title: 'Da_C_Side',
			shape: 'image',
			image: 'icon/단체.png',
			url: ''
		});

		nodesArray.push({
			id: '중앙대학교',
			label: '중앙대학교',
			title: '중앙대학교',
			shape: 'image',
			image: 'icon/장소.png',
			url: ''
		});

		nodesArray.push({
			id: '박하재홍과의_인터뷰',
			label: '박하재홍과의 인터뷰',
			title: '박하재홍과의_인터뷰',
			shape: 'image',
			image: 'icon/참조.png',
			url: ''
		});

		nodesArray.push({
			id: '권우찬과의_인터뷰',
			label: '권우찬과의 인터뷰',
			title: '권우찬과의_인터뷰',
			shape: 'image',
			image: 'icon/참조.png',
			url: ''
		});

		nodesArray.push({
			id: '평가1',
			label: '평가1',
			title: '평가1',
			shape: 'circle',
			color: {background: 'white',
				border: 'black'
				},
			url: ''
		});

		nodesArray.push({
			id: '평가2',
			label: '평가2',
			title: '평가2',
			shape: 'circle',
			color: {background: 'white',
				border: 'black'
				},
			url: ''
		});

		nodesArray.push({
			id: '소속되다',
			label: '소속되다',
			title: '소속되다',
			shape: 'image',
			image: 'icon/개념.png',
			url: ''
		});

		nodesArray.push({
			id: '박하재홍',
			label: '박하재홍',
			title: '박하재홍',
			shape: 'image',
			image: 'icon/인물.png',
			url: ''
		});

		nodesArray.push({
			id: '권우찬',
			label: '권우찬',
			title: '권우찬',
			shape: 'image',
			image: 'icon/인물.png',
			url: ''
		});

		nodesArray.push({
			id: '활동하다',
			label: '활동하다',
			title: '활동하다',
			shape: 'image',
			image: 'icon/개념.png',
			url: ''
		});

		edgesArray.push({
			from: '윤종훈',
			to: '평가1',
			label: 'krsc:hasAssessment',
			title: 'krsc:hasAssessment',
			arrows: 'to',
		});

		edgesArray.push({
			from: '평가1',
			to: '윤종훈',
			label: 'krsc:assessmentBy',
			title: 'krsc:assessmentBy',
			arrows: 'to',
		});

		edgesArray.push({
			from: '평가1',
			to: '박하재홍과의_인터뷰',
			label: 'dcterms:isReferencedBy',
			title: 'dcterms:isReferencedBy',
			arrows: 'to',
		});

		edgesArray.push({
			from: '박하재홍과의_인터뷰',
			to: '평가1',
			label: 'dcterms:references',
			title: 'dcterms:references',
			arrows: 'to',
		});

		edgesArray.push({
			from: '평가1',
			to: '스컬',
			label: 'krsc:assessmentSubject',
			title: 'krsc:assessmentSubject',
			arrows: 'to',
		});

		edgesArray.push({
			from: '평가1',
			to: '활동하다',
			label: 'krsc:assessmentRelation',
			title: 'krsc:assessmentRelation',
			arrows: 'to',
		});

		edgesArray.push({
			from: '평가1',
			to: '중앙대학교',
			label: 'krsc:assessmentObject',
			title: 'krsc:assessmentObject',
			arrows: 'to',
		});

		edgesArray.push({
			from: '박하재홍과의_인터뷰',
			to: '박하재홍',
			label: 'krsc:interviewee',
			title: 'krsc:interviewee',
			arrows: 'to',
		});

		edgesArray.push({
			from: '박하재홍과의_인터뷰',
			to: '윤종훈',
			label: 'krsc:interviewer',
			title: 'krsc:interviewer',
			arrows: 'to',
		});

		edgesArray.push({
			from: '김철수',
			to: '평가2',
			label: 'krsc:hasAssessment',
			title: 'krsc:hasAssessment',
			arrows: 'to',
		});

		edgesArray.push({
			from: '평가2',
			to: '김철수',
			label: 'krsc:assessmentBy',
			title: 'krsc:assessmentBy',
			arrows: 'to',
		});

		edgesArray.push({
			from: '평가2',
			to: '권우찬과의_인터뷰',
			label: 'dcterms:isReferencedBy',
			title: 'dcterms:isReferencedBy',
			arrows: 'to',
		});

		edgesArray.push({
			from: '권우찬과의_인터뷰',
			to: '평가2',
			label: 'dcterms:references',
			title: 'dcterms:references',
			arrows: 'to',
		});

		edgesArray.push({
			from: '평가2',
			to: '스컬',
			label: 'krsc:assessmentSubject',
			title: 'krsc:assessmentSubject',
			arrows: 'to',
		});

		edgesArray.push({
			from: '평가2',
			to: '소속되다',
			label: 'krsc:assessmentRelation',
			title: 'krsc:assessmentRelation',
			arrows: 'to',
		});

		edgesArray.push({
			from: '평가2',
			to: 'Da_C_Side',
			label: 'krsc:assessmentObject',
			title: 'krsc:assessmentObject',
			arrows: 'to',
		});

		edgesArray.push({
			from: '권우찬과의_인터뷰',
			to: '권우찬',
			label: 'krsc:interviewee',
			title: 'krsc:interviewee',
			arrows: 'to',
		});

		edgesArray.push({
			from: '권우찬과의_인터뷰',
			to: '윤종훈',
			label: 'krsc:interviewer',
			title: 'krsc:interviewer',
			arrows: 'to',
		});

		var nodes = new vis.DataSet(nodesArray);
		var edges = new vis.DataSet(edgesArray);
		
		// create a network
		var container = document.getElementById('mynetwork');
		var data = { nodes: nodes, edges: edges };
		
		var options = {
			nodes: { size: 30, margin: 5,
				color: { background: 'white',
					highlight: { border: 'gold', background: '#D2E5FF' },
					hover: { border: 'gold', background: '#D2E5FF' },
				},
				font: { face: '함초롬바탕', color: 'black', size: 15 },
				labelHighlightBold: true,
				shadow: false
			},

			edges: { length: 300, width: 1,
				color: { color: 'lightgray', highlight: 'grey', opacity: 1.0 },
				font: { face: '맑은 고딕', align: 'bottom', size: 12, color: 'darkcyan', strokeWidth: 5, strokeColor: 'white' },
				smooth: { enabled: true, type: 'dynamic', roundness: 0.5 }
			},
			layout: { randomSeed: 100,
				hierarchical: { 
					enabled: 
						directionInput.value == 'UD' || directionInput.value == 'LR'
							? true
							: false,
					direction: directionInput.value,
					sortMethod: 'directed'
				}
			},

			interaction: { navigationButtons: true },
			physics: { stabilization: false }
		};
		
		// initialize your network!
		network = new vis.Network(container, data, options);
		
		// select a node to open a related web page.
    	network.on('selectNode', function(params) {
			var sel = params.nodes[0];
			var rows = nodesArray.length;
			for (var i = 0; i < rows; i++) {
				if (sel==nodesArray[i].id) {
					var destination=nodesArray[i].url;
					if( !nodesArray[i].url || nodesArray[i].url=='')break;
					else window.open(encodeURI(decodeURI(nodesArray[i].url)), '_self');
				}
			}
		});
	}
    </script>
</head>

<body onload='draw();'>

	<div id='mynetwork'></div>

	<div  id='layout-selection' style='text-align:right;font-size:150%;'>
		<input type='button' id='btn-Normal' value='⿴' />
		<input type='button' id='btn-Vertical' value='⿳' />
		<input type='button' id='btn-Horizontal' value='⿲' />
		<input type='hidden' id='direction' value='Normal' />
	</div>

	<script language='JavaScript'>	
		var directionInput = document.getElementById('direction');

		var btnUD = document.getElementById('btn-Vertical');
		btnUD.onclick = function () {
			directionInput.value = 'UD';
			draw();
		};
		var btnLR = document.getElementById('btn-Horizontal');
		btnLR.onclick = function () {
			directionInput.value = 'LR';
			draw();
		};
		var btnNormal = document.getElementById('btn-Normal');
		btnNormal.onclick = function () {
			directionInput.value = 'Normal';
			draw();
		};
	</script>
</body>
</html>
